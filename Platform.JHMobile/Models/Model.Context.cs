//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Platform.JHMobile.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class C6Entities : DbContext
    {
        public C6Entities()
            : base("name=C6Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<信息门户对象简略> 信息门户对象简略 { get; set; }
    
        public virtual ObjectResult<Nullable<int>> f______计数寻呼历史数(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f______计数寻呼历史数", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> f______计数寻呼未阅数(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f______计数寻呼未阅数", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> f______计数寻呼已阅数(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f______计数寻呼已阅数", userIDParameter);
        }
    
        public virtual ObjectResult<f______列表寻呼未阅表_Result> f______列表寻呼未阅表(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f______列表寻呼未阅表_Result>("f______列表寻呼未阅表", userIdParameter);
        }
    
        public virtual ObjectResult<string> f______微信ID获取用户ID(string openId)
        {
            var openIdParameter = openId != null ?
                new ObjectParameter("OpenId", openId) :
                new ObjectParameter("OpenId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("f______微信ID获取用户ID", openIdParameter);
        }
    
        public virtual ObjectResult<f______列表寻呼附件表_Result> f______列表寻呼附件表(string callID)
        {
            var callIDParameter = callID != null ?
                new ObjectParameter("CallID", callID) :
                new ObjectParameter("CallID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f______列表寻呼附件表_Result>("f______列表寻呼附件表", callIDParameter);
        }
    
        public virtual int f______列表寻呼转已阅(Nullable<int> callNoSeeId)
        {
            var callNoSeeIdParameter = callNoSeeId.HasValue ?
                new ObjectParameter("CallNoSeeId", callNoSeeId) :
                new ObjectParameter("CallNoSeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f______列表寻呼转已阅", callNoSeeIdParameter);
        }
    
        public virtual ObjectResult<f______列表寻呼历史表_Result> f______列表寻呼历史表(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f______列表寻呼历史表_Result>("f______列表寻呼历史表", userIDParameter);
        }
    
        public virtual ObjectResult<f______列表寻呼已阅表_Result> f______列表寻呼已阅表(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f______列表寻呼已阅表_Result>("f______列表寻呼已阅表", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> f______计数信息门户数(string userID, string moduleType)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("f______计数信息门户数", userIDParameter, moduleTypeParameter);
        }
    
        public virtual ObjectResult<f______信息门户模块表_Result> f______信息门户模块表()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f______信息门户模块表_Result>("f______信息门户模块表");
        }
    
        public virtual ObjectResult<信息门户对象简略> f______列表信息门户表(string userID, string moduleType)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<信息门户对象简略>("f______列表信息门户表", userIDParameter, moduleTypeParameter);
        }
    
        public virtual ObjectResult<信息门户对象简略> f______列表信息门户表(string userID, string moduleType, MergeOption mergeOption)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<信息门户对象简略>("f______列表信息门户表", mergeOption, userIDParameter, moduleTypeParameter);
        }
    }
}
